{"version":3,"sources":["components/AddField.js","components/TodoItem.js","components/TodoList.js","components/TodoArchive.js","components/TodoActive.js","components/TodoAll.js","components/Counter.js","components/TodoTable.js","App.js","serviceWorker.js","index.js"],"names":["AddField","handleOnItemAdded","_this","props","onItemAdded","handleOnItemChange","onItemChange","_this2","this","onClearInput","react_default","a","createElement","onChange","event","target","value","className","type","placeholder","onClick","Component","TodoItem","_ref","todoTask","handleItemCompleted","itemId","completed","concat","TodoList","todos","map","item","components_TodoItem","key","id","task","TodoArchive","handleArchive","TodoActive","showActive","TodoAll","showAll","Counter","console","log","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","length","TodoTable","state","newTodo","setState","filter","_ref2","_ref3","handleItemChange","text","_ref4","Object","toConsumableArray","_ref5","todosList","index","findIndex","_this$state","AddField_AddField","components_TodoList","components_TodoAll","components_TodoArchive","components_TodoActive","components_Counter","App","TodoTable_TodoTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8610d178.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class AddField extends Component {\n\thandleOnItemAdded = this.props.onItemAdded;\n\thandleOnItemChange = this.props.onItemChange;\n\t\n  render() {\n\t\tconst onClearInput = this.props.onClearInput;\n    return (\t\n\t\t\t<div>\n\t\t\t\t<input \n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tthis.handleOnItemChange(event.target.value)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"App__todo-input\"\n\t\t\t\t\tvalue={onClearInput}\n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tplaceholder=\"Add task...\"\n\t\t\t\t>\n\t\t\t\t</input>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"App__todo-add-btn\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\tthis.handleOnItemAdded()\n\t\t\t\t\t}}\n\t\t\t\t> \n\t\t\t\t\tAdd Task \n\t\t\t\t</button>\n\t\t\t</div>\n    )\n  }\n}","import React from 'react';\nimport '../App.css';\n\nconst TodoItem = ({\n\ttodoTask, \n\thandleItemCompleted,\n\titemId, \n\tcompleted\n}) => {\n  return (\n    <div className=\"App__todo-item\">\n\t\t\t<input \n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tonChange={() => {\n\t\t\t\t\thandleItemCompleted(itemId)\n\t\t\t\t}}\n\t\t\t>\t\n\t\t\t</input>\n\t\t\t<li className={`App__todo-checkbox ${completed ? \"App__todo-item-completed\" : \"\"}`}>\n\t\t\t\t{todoTask}\n\t\t\t</li>\n    </div>\n  )\n}\n\nexport default TodoItem;\n\n","import React from 'react';\nimport TodoItem from './TodoItem'\n\nconst TodoList = (props) => {\n  const { todos, handleItemCompleted } = props;\t\n    return (\n      <ul className=\"App__todo-list\">\n        {todos.map(item => {\n          return <TodoItem \n                  key={item.id}\n                  itemId={item.id} \n                  todoTask={item.task}\n                  handleItemCompleted={handleItemCompleted}\n                  completed={item.completed}\n                />\n\t\t\t\t})}\n      </ul>\n    )\n}\n\nexport default TodoList;","import React from 'react'\n\nconst TodoArchive = ({ handleArchive }) => {\n\n  return (\n    <button\n\t\t\tclassName=\"App__todo-btn\"\n\t\t\tonClick={() => handleArchive()}\n\t\t> Clear Completed\n\t\t</button>\n\t)\n}\n\nexport default TodoArchive\n","import React from 'react'\n\nconst TodoActive = ({ showActive }) => {\n\n  return (\n    <button\n\t\t\tclassName=\"App__todo-btn\"\n\t\t\tonClick={() => {showActive()}}\n\t\t> Active\n\t\t</button>\n\t)\n}\n\nexport default TodoActive;","import React from 'react'\n\nconst TodoAll = ({ showAll }) => {\n\n  return (\n    <button\n\t\t  className=\"App__todo-btn\"\n\t\t\tonClick={() => {showAll()}}\n\t\t> All\n\t\t</button>\n\t)\n}\n\nexport default TodoAll;","import React from 'react'\n\nconst Counter = ({ todos }) => {\n\tconsole.log(todos[1]);\n\n\tlet count = 0; \n\tfor (let todo of todos) {\n\t\tif (todo.completed) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn (\n\t\t\t<div className=\"App__todo-counter\"> \n\t\t\t\t{count} / {todos.length}\n\t\t\t</div>\n\t)\n}\nexport default Counter","import React, { Component } from 'react';\n\nimport '../App.css';\n\nimport AddField from './AddField';\nimport TodoList from './TodoList';\nimport TodoArchive from './TodoArchive';\nimport TodoActive from './TodoActive';\nimport TodoAll from './TodoAll';\nimport Counter from './Counter'\n\nexport default class TodoTable extends Component {\n\tstate = {\n\t\ttodos: [\n\t\t\t{ id: 0, task: 'Buy groceries', completed: false },\n\t\t\t{ id: 1, task: 'Take out trash', completed: false } \n\t\t],\n\t\tnewTodo: '',\n\t}\n\n\thandleArchive = () => {\n\t\tthis.setState(({ todos }) => {\n\t\t\tlet remainingTasks = todos.filter(item => !item.completed);\n\t\t\treturn {\n\t\t\t\ttodos: remainingTasks,\n\t\t\t}\n\t\t})\n\t}\n\n\tshowActive = () => {\n\t\tthis.setState(({ todos }) => {\n\t\t\tlet activeTasks = todos.filter(item => !item.completed)\n\t\t\treturn {\n\t\t\t\ttodos: activeTasks,\n\t\t\t}\n\t})\n\t}\n\n\tshowAll = () => {\n\t\tthis.setState(( { todos }) => {\n\t\t\tlet allTasks = todos.map(item => item)\n\t\t\treturn {\n\t\t\t\ttodos: allTasks,\n\t\t\t}\n\t\t})\n\t} \n\n\thandleItemChange = (text) => {\n\t\tthis.setState( {\n\t\t\tnewTodo: text,\n\t\t})\n\t}\n\n\thandleOnItemAdded = () => {\n\n\t\tif (!this.state.newTodo) {\n\t\t\treturn \n\t\t}\n\n\t\tthis.setState(({ todos, newTodo }) => {\n\t\t\tlet newItem = {\n\t\t\t\tid: todos.length + 1,\n\t\t\t\ttask: newTodo,\n\t\t\t\tcompleted: false,\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\ttodos: [ newItem, ...todos ],\n\t\t\t\tnewTodo: '',\n\t\t\t}\n\t\t})\n\t}\n\n\thandleItemCompleted = (itemId) => {\n\t\tthis.setState(({ todos }) => {\n\t\t\tlet todosList = [...todos];\n\t\t\tlet index =  todosList.findIndex(item => item.id === itemId);\n\t\t\ttodosList[index].completed = !todosList[index].completed;\n\t\t\treturn {\n\t\t\t\ttodos: todosList,\n\t\t\t}  \n\t\t})\t\t\n\t}\n\n  render() {\n\t\tconst { todos, newTodo } = this.state;\n\n    return (\n\t\t\t<div>\n\t\t\t\t<h1>Your todo list</h1>\n\t\t\t\t<AddField \n\t\t\t\t\t\tonItemAdded={this.handleOnItemAdded}\n\t\t\t\t\t\tonItemChange={this.handleItemChange}\n\t\t\t\t\t\tonClearInput={newTodo}\n\t\t\t\t\t/>\n\t\t\t\t\t<TodoList \n\t\t\t\t\t\ttodos={todos} \n\t\t\t\t\t\thandleItemCompleted={this.handleItemCompleted}\n\t\t\t\t\t/>\n\t\t\t\t\t<TodoAll \n\t\t\t\t\t\tshowAll={this.showAll}\n\t\t\t\t\t/>\n\t\t\t\t\t<TodoArchive \n\t\t\t\t\t\thandleArchive={this.handleArchive} \n\t\t\t\t\t/>\n\t\t\t\t\t<TodoActive \n\t\t\t\t\t\tshowActive={this.showActive}\n\t\t\t\t\t/>\n\t\t\t\t\t<Counter \n\t\t\t\t\t\ttodos={todos}\n\t\t\t\t\t/> \n\t\t\t\t\t\n\t\t\t</div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport TodoTable from './components/TodoTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoTable /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}