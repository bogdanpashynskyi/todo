{"version":3,"sources":["components/AddField.js","components/TodoItem.js","components/TodoList.js","components/TodoFilter.js","components/Counter.js","components/TodoTable.js","App.js","serviceWorker.js","index.js"],"names":["AddField","props","onItemChange","onItemAdded","onClearInput","react_default","a","createElement","onSubmit","event","preventDefault","onChange","target","value","className","type","placeholder","TodoItem","_ref","todoTask","handleItemCompleted","itemId","completed","changeEditMode","editMode","updateItem","cancelUpdate","onDoubleClick","defaultValue","autoFocus","onKeyPress","onKeyDown","concat","TodoList","todos","map","item","components_TodoItem","key","id","task","TodoFilter","onFilterChange","onClick","Counter","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","length","TodoTable","state","filterMode","showTips","newTodo","handleArchive","_this","setState","Object","toConsumableArray","filter","handleFilter","_ref2","el","objectSpread","updatedItem","_ref3","_ref4","handleItemChange","text","handleOnItemAdded","_ref5","_ref6","_this2","this","_this$state","filteredTodos","components_AddField","onPressInput","components_TodoList","components_TodoFilter","components_Counter","Component","App","TodoTable_TodoTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d91cd973.chunk.js","sourcesContent":["import React from 'react';\n\nconst AddField = (props) => {\n\tconst { onItemChange, onItemAdded, onClearInput } = props;\n\treturn (\t\n\t<form onSubmit={(event) => {\n\t\tevent.preventDefault();\n\t\tonItemAdded()\n\t}\n\t\t}>\n\t\t<div>\n\t\t\t<input \n\t\t\t\tonChange={(event) => onItemChange(event.target.value)}\n\t\t\t\tclassName=\"App__todo-input\"\n\t\t\t\tvalue={onClearInput}\n\t\t\t\ttype=\"text\" \n\t\t\t\tplaceholder=\"Add task...\"\n\t\t\t>\n\t\t\t</input>\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"App__todo-add-btn\"\n\t\t\t> \n\t\t\t\tAdd\n\t\t\t</button>\n\t\t</div>\n\t</form>\n)\n}\n\nexport default AddField","import React from 'react';\nimport '../App.css';\n\nconst TodoItem = ({\n\ttodoTask, \n\thandleItemCompleted,\n\titemId, \n\tcompleted,\n\tchangeEditMode,\n\teditMode,\n\tupdateItem,\n\tcancelUpdate\n}) => {\n\tconst renderEditView = () => {\n\t\treturn <div>\n\t\t\t<input className=\"App__todo-edit-input\"\n\t\t\ttype=\"text\"\n\t\t\tdefaultValue={todoTask}\n\t\t\tautoFocus\n\t\t\tonKeyPress={(event) => updateItem(event, itemId)}\n\t\t\tonKeyDown={(event) => cancelUpdate(event, itemId)}\n\t\t\t/>\n\t\t\t</div>\n\t\t}\n\tconst renderDefaultView = () => {\n\t\treturn <div>\t\t\t\t\n\t\t<li \n\t\t\tclassName={`App__todo-item-text ${ completed ? \"App__todo-item-completed\" : \"\" }`}\n\t\t>\n\t\t{todoTask}\n\t\t</li>\n\t\t</div>\n\t}\n\n  return (\n    <div className=\"App__todo-item\">\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tonChange={() =>\thandleItemCompleted(itemId)}\n\t\t\t>\t\n\t\t\t</input>\n\t\t\t<div \n\t\t\tonDoubleClick={() => changeEditMode(itemId)}\n\t\t\t>\n\t\t\t{\n\t\t\t\teditMode ? \n\t\t\t\trenderEditView() : \n\t\t\t\trenderDefaultView()\n\t\t\t}\n\t\t\t</div>\n\n    </div>\n  )\n}\n\nexport default TodoItem;\n\n","import React from 'react';\nimport TodoItem from './TodoItem'\n\nconst TodoList = (props) => {\n  const { \n    todos,\n    handleItemCompleted,\n    changeEditMode,\n    updateItem,\n    cancelUpdate\n  } = props;\t\n    return (\n      <ul className=\"App__todo-list\">\n        {todos.map(\n          item =>\n          <TodoItem \n            key={item.id}\n            itemId={item.id} \n            todoTask={item.task}\n            handleItemCompleted={handleItemCompleted}\n            completed={item.completed}\n            changeEditMode={changeEditMode}\n            editMode={item.editMode}\n            updateItem={updateItem}\n            cancelUpdate={cancelUpdate}\n          />\n\t\t\t\t)}\n      </ul>\n    )\n}\n\nexport default TodoList;","import React from 'react'\n\nconst TodoFilter = ({ onFilterChange}) => {\n\n  return (\n    <div>\n\t\t\t<button\n\t\t\tvalue=\"completed\"\n\t\t\tclassName=\"App__todo-btn\"\n\t\t\tonClick={(event) => onFilterChange(event)}\n\t\t\t>\n\t\t\tCompleted\n\t\t\t</button>\n\t\t\t\n\t\t\t<button\n\t\t\tvalue=\"all\"\n\t\t\tclassName=\"App__todo-btn\"\n\t\t\tonClick={(event) => onFilterChange(event)}\n\t\t\t>\n\t\t\tAll\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\tvalue=\"active\"\n\t\t\tclassName=\"App__todo-btn\"\n\t\t\tonClick={(event) => onFilterChange(event)}\n\t\t\t>\n\t\t\tActive\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default TodoFilter\n","import React from 'react'\n\nconst Counter = ({ todos }) => {\n\n\tlet count = 0; \n\tfor (let todo of todos) {\n\t\tif (todo.completed) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn (\n\t\t\t<div className=\"App__todo-counter\"> \n\t\t\t\t{count} / {todos.length}\n\t\t\t</div>\n\t)\n}\nexport default Counter","import React, { Component } from 'react';\n\nimport '../App.css';\n\nimport AddField from './AddField';\nimport TodoList from './TodoList';\nimport TodoFilter from './TodoFilter';\nimport Counter from './Counter'\n\nlet length = 0;\n\nexport default class TodoTable extends Component {\n\tstate = {\n\t\ttodos: [\n\t\t\t{ id: 999, task: 'Buy groceries', completed: false, editMode: false },\n\t\t\t{ id: 1000, task: 'Go for a walk', completed: false, editMode: false },\n\t\t],\n\t\tfilterMode: 'all',\n\t\tshowTips: false,   \n\t\tnewTodo: '',\n\t}\n\n\thandleArchive = () => {\n\t\tthis.setState(({ todos }) => {\n\t\t\tlet todosList = [...todos]\n\n\t\t\tlet remainingTasks = todosList.filter(item => !item.completed)\n\n\t\t\treturn {\n\t\t\t\ttodos: remainingTasks,\n\t\t\t}\n\t\t})\n\t}\n\n\tonFilterChange = (event) => {\n\t\tlet filterMode = event.target.value;\n\t\tthis.setState({ filterMode })\n\t}\n\n\thandleFilter = (todos) => {\n\t\tlet filter = this.state.filterMode;\n\t\tswitch(filter) {\n\t\t\tcase 'all': \n\t\t\treturn todos;\n\t\t\tcase 'active':\n\t\t\treturn todos.filter(item => !item.completed);\n\t\t\tcase 'completed': \n\t\t\treturn todos.filter(item => item.completed)\n\t\t\tdefault: \n\t\t\t\treturn todos;\n\t\t}\n\t}\n\n\tchangeEditMode = (itemId) => {\n\t\tthis.setState(({ todos, showTips }) => {\n\t\t\tlet todosList = [...todos];\n\t\t\tlet updatedTodoList = todosList.map(el => {\n\t\t\t\treturn {...el, editMode: el.id === itemId}\n\t\t  })\n\t\t\treturn {\n\t\t\t\ttodos: updatedTodoList,\n\t\t\t\tshowTips: !showTips,\n\t\t\t}\n\t\t}) \n\t}\n\n\tupdateItem = (event, itemId) => {\n\t\tlet updatedItem = event.target.value;\n\n\t\tif (!updatedItem) {\n\t\t\treturn\n\t\t}\n\n\t\tif (event.key === 'Enter') {\n\t\t\tthis.setState(({ todos }) => {\n\t\t\t\tlet todosList = [...todos];\n\t\t\t\tlet updatedTodosList = todosList.map(item => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item, \n\t\t\t\t\t\ttask: item.id === itemId ? updatedItem : item.task, \n\t\t\t\t\t\teditMode: false}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\ttodos: updatedTodosList,\n\t\t\t\t\tshowTips: false,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tcancelUpdate = (event, itemId) => {\n\t\tif (event.key === 'Escape') {\n\t\t\tthis.setState(({ todos }) => {\n\t\t\t\tlet todosList = [...todos];\n\t\t\t\tlet originalTodosList = todosList.map(item => {\n\t\t\t\t\treturn { ...item, editMode: false}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\ttodos: originalTodosList,\n\t\t\t\t\tshowTips: false,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\thandleItemChange = (text) => {\n\t\tthis.setState( {\n\t\t\tnewTodo: text,\n\t\t})\n\t}\n\n\thandleOnItemAdded = () => {\n\n\t\tif (!this.state.newTodo) {\n\t\t\treturn \n\t\t}\n\n\t\tthis.setState(({ todos, newTodo }) => {\n\t\t\tlet newItem = {\n\t\t\t\tid: length++,\n\t\t\t\ttask: newTodo,\n\t\t\t\tcompleted: false,\n\t\t\t\teditMode: false,\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\ttodos: [ newItem, ...todos ],\n\t\t\t\tnewTodo: '',\n\t\t\t}\n\t\t})\n\t}\n\n\thandleItemCompleted = (itemId) => {\n\t\tthis.setState(({ todos }) => {\n\t\t\tlet todosList = [...todos];\n\t\t\tlet updatedTodosList =  todosList.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\t...item, \n\t\t\t\t\tcompleted: item.id === itemId ? !item.completed : item.completed,\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttodos: updatedTodosList,\n\t\t\t}  \n\t\t})\t\t\n\t}\n\n  render() {\n\t\tconst { todos, newTodo, showTips } = this.state;\n\t\tlet filteredTodos = this.handleFilter(todos);\n    return (\n\t\t\t<div>\n\t\t\t\t<h1>Your todo list</h1>\n\t\t\t\t<AddField \n\t\t\t\t\tonItemAdded={this.handleOnItemAdded}\n\t\t\t\t\tonItemChange={this.handleItemChange}\n\t\t\t\t\tonClearInput={newTodo}\n\t\t\t\t\tonPressInput={this.onPressInput}\n\t\t\t\t/>\t\t\t\n\t\t\t\t<TodoList \n\t\t\t\t\ttodos={filteredTodos} \n\t\t\t\t\thandleItemCompleted={this.handleItemCompleted}\n\t\t\t\t\tchangeEditMode={this.changeEditMode}\n\t\t\t\t\tupdateItem={this.updateItem}\n\t\t\t\t\tcancelUpdate={this.cancelUpdate}\n\t\t\t\t/>\n\t\t\t\t<TodoFilter \n\t\t\t\t\tonFilterChange={this.onFilterChange}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\tclassName=\"App__todo-btn\"\n\t\t\t\tonClick={() => this.handleArchive(todos)}> Archive \n\t\t\t\t</button>\t\n\t\t\t\t<Counter \n\t\t\t\t\ttodos={todos}\n\t\t\t\t/> \n\t\t\t\t<div className=\"App__todo-tips\">\n\t\t\t\t{ showTips ? <div> \n\t\t\t\t\t<p>Press 'Esc' to cancel changes</p>\n\t\t\t\t\t<p>Press 'Enter' to update the item</p>\n\t\t\t\t</div> : <div> Doubleclick to change the item </div> }\n\t\t\t\t</div>\n\t\t\t</div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport TodoTable from './components/TodoTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoTable /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}